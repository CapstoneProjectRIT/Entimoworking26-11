{"ast":null,"code":"var _jsxFileName = \"U:\\\\Capstone\\\\Entimoworking26-11\\\\client\\\\entimo\\\\src\\\\component\\\\Homepage\\\\PostComment.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/destructuring-assignment */\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable react/button-has-type */\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostComment(props) {\n  _s();\n\n  const [comment, setComment] = useState('');\n  const [data, setData] = useState([]); // const getdata=()=>{\n  //   axios.get('http://localhost:5000/api/allQuestion').then((response)=>{\n  //     const data=response.data;\n  //     setData(data);\n  //     console.log(\"Data received!\")\n  //   })\n  //   .catch((error)=>{\n  //     console.error(error);\n  //   })\n  // }\n\n  const postcommnet = async e => {\n    e.preventDefault();\n    const form_data = new FormData(); // const question=getdata();\n\n    form_data.append('comment', comment);\n    const url = 'http://localhost:5000/api/comment';\n\n    try {\n      const res = await axios.post(url, form_data, {\n        withCredentials: true\n      });\n      const status = res;\n      window.alert(res.data.error);\n\n      if (status === 200) {\n        console.log(\"Error\");\n        window.alert(\"Comment Posted \");\n      }\n\n      if (status === 200) {\n        window.alert(\"Comment Posted Alredy \");\n      }\n    } catch (error) {\n      window.alert(\"Error\");\n    } // const [questions,setQuestions]=useState([]);\n    //   useEffect(()=>{\n    //       const url=\"http://localhost:5000/api/allQuestion\";\n    //       axios\n    //     .get(url, { withCredentials: true })\n    //     .then((response) => {\n    //       setQuestions(response.data);\n    //     })\n    //     .catch((error) => {\n    //       console.error(error);\n    //     });\n    //   });\n\n  };\n\n  return props.trigger ? /*#__PURE__*/_jsxDEV(Contain, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [data.map(datas => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: datas.owner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: datas.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        onClick: () => props.setTrigger(false),\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        placeholder: \"Enter Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postcommnet,\n        children: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this) : '';\n}\n\n_s(PostComment, \"Luh4Mzj5T/MnGhX6ZS8U1+U01ww=\");\n\n_c = PostComment;\nexport default PostComment;\nconst Contain = styled.div`\nwidth: 1000px;\nheight: 300px;\nposition: absolute;\n\nborder: 1px solid lightgray;\nbackground-color: white;\nbox-shadow: 2rem 1.4rem 2rem lightgray;\ntop: 130%;\nleft: 25%;\n`;\n_c2 = Contain;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostComment\");\n$RefreshReg$(_c2, \"Contain\");","map":{"version":3,"sources":["U:/Capstone/Entimoworking26-11/client/entimo/src/component/Homepage/PostComment.js"],"names":["React","useState","styled","axios","PostComment","props","comment","setComment","data","setData","postcommnet","e","preventDefault","form_data","FormData","append","url","res","post","withCredentials","status","window","alert","error","console","log","trigger","map","datas","owner","question","setTrigger","target","value","children","Contain","div"],"mappings":"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","sourcesContent":["/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/button-has-type */\r\nimport React,{useState} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport axios from 'axios';\r\nfunction PostComment(props) {\r\n\r\n  const [comment,setComment]=useState('');\r\n  const [data,setData]=useState([]);\r\n\r\n  // const getdata=()=>{\r\n  //   axios.get('http://localhost:5000/api/allQuestion').then((response)=>{\r\n  //     const data=response.data;\r\n  //     setData(data);\r\n  //     console.log(\"Data received!\")\r\n  //   })\r\n  //   .catch((error)=>{\r\n  //     console.error(error);\r\n  //   })\r\n  // }\r\n  const postcommnet=async (e) =>{\r\n      e.preventDefault();\r\n\r\n     const form_data=new FormData();\r\n    // const question=getdata();\r\n     form_data.append('comment',comment);\r\n     \r\n          const url='http://localhost:5000/api/comment';\r\n     try {\r\n      \r\n      const res=await axios.post(url,form_data,{\r\n          withCredentials:true,\r\n      });\r\n      const status=res;\r\n      window.alert(res.data.error);\r\n      if(status===200)\r\n      {\r\n        console.log(\"Error\");\r\n        window.alert(\"Comment Posted \");\r\n      }\r\n      if(status===200)\r\n      {\r\n        window.alert(\"Comment Posted Alredy \");\r\n      }\r\n      \r\n      \r\n  } catch (error) {\r\n    \r\n      window.alert(\"Error\");\r\n  }\r\n\r\n  // const [questions,setQuestions]=useState([]);\r\n  //   useEffect(()=>{\r\n  //       const url=\"http://localhost:5000/api/allQuestion\";\r\n       \r\n  //       axios\r\n  //     .get(url, { withCredentials: true })\r\n  //     .then((response) => {\r\n  //       setQuestions(response.data);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(error);\r\n  //     });\r\n\r\n  //   });\r\n\r\n    }\r\n \r\n  return (props.trigger) ? (\r\n\r\n    <Contain>\r\n      <div>\r\n        {data.map((datas)=>{\r\n          \r\n          return(\r\n            \r\n            <div>\r\n          <h5 >{datas.owner}</h5>\r\n         \r\n          <h2>{datas.question}</h2>\r\n          </div>\r\n            );\r\n        \r\n     \r\n      })}\r\n      <button type=\"reset\" onClick={() => props.setTrigger(false)}>\r\n            close\r\n          </button>\r\n          \r\n        <input type=\"text\" value={comment} onChange={(e)=>setComment(e.target.value)} placeholder=\"Enter Comment\" />\r\n        \r\n        \r\n        \r\n        <button onClick={postcommnet} >\r\n          post\r\n        </button>\r\n        \r\n        {props.children}\r\n        \r\n      </div>\r\n    </Contain>\r\n  ) : '';\r\n}\r\n\r\nexport default PostComment;\r\nconst Contain = styled.div`\r\nwidth: 1000px;\r\nheight: 300px;\r\nposition: absolute;\r\n\r\nborder: 1px solid lightgray;\r\nbackground-color: white;\r\nbox-shadow: 2rem 1.4rem 2rem lightgray;\r\ntop: 130%;\r\nleft: 25%;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}