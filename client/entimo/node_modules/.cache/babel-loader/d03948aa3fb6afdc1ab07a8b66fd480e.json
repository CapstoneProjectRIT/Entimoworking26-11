{"ast":null,"code":"var _jsxFileName = \"D:\\\\TY BTECH\\\\SEM VI\\\\Capstone\\\\ENTIMO\\\\client\\\\entimo\\\\src\\\\component\\\\Homepage\\\\Post.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/destructuring-assignment */\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable react/button-has-type */\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport './QuestionBox.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post(props) {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n\n  const postquestion = async e => {\n    e.preventDefault();\n    const form_data = new FormData();\n    form_data.append('question', questions);\n    const url = 'http://localhost:5000/api/askquestion';\n\n    try {\n      const res = await axios.post(url, form_data, {\n        withCredentials: true\n      });\n      const status = res;\n      window.alert(res.data.error);\n\n      if (status === 200) {\n        window.alert(\"Question Asked \");\n      }\n\n      if (status === 200) {\n        window.alert(\"Question Asked Alredy \");\n      }\n    } catch (error) {\n      window.alert(\"Error\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QuestionBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuestionBox__user\",\n      children: questions.map(question => {\n        return /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"user__username\",\n          children: question.owner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuestionBox__inputField\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What is your question\",\n        className: \"QuestionBox__inputField\",\n        onChange: e => setQuestion(e.target.value),\n        value: questions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: auth_status === true ? false : true,\n        className: \"QuestionBox__btn\",\n        onClick: postquestion,\n        children: \"Ask Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"p1izjT6puL7jslBawrfFKYnqI4M=\");\n\n_c = Post;\nexport default Post;\nconst Contain = styled.div`\nwidth: 1000px;\nheight: 300px;\nposition: absolute;\n\nborder: 1px solid lightgray;\nbackground-color: white;\nbox-shadow: 2rem 1.4rem 2rem lightgray;\ntop: 130%;\nleft: 25%;\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["D:/TY BTECH/SEM VI/Capstone/ENTIMO/client/entimo/src/component/Homepage/Post.js"],"names":["React","useState","styled","axios","Post","props","questions","setQuestions","postquestion","e","preventDefault","form_data","FormData","append","url","res","post","withCredentials","status","window","alert","data","error","map","question","owner","setQuestion","target","value","auth_status","Contain","div"],"mappings":";;;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,mBAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEnB,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBN,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMO,YAAY,GAAC,MAAOC,CAAP,IAAY;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAED,UAAMC,SAAS,GAAC,IAAIC,QAAJ,EAAhB;AAEAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,UAAjB,EAA4BP,SAA5B;AACA,UAAMQ,GAAG,GAAC,uCAAV;;AACA,QAAI;AAEH,YAAMC,GAAG,GAAC,MAAMZ,KAAK,CAACa,IAAN,CAAWF,GAAX,EAAeH,SAAf,EAAyB;AACrCM,QAAAA,eAAe,EAAC;AADqB,OAAzB,CAAhB;AAGA,YAAMC,MAAM,GAACH,GAAb;AACAI,MAAAA,MAAM,CAACC,KAAP,CAAaL,GAAG,CAACM,IAAJ,CAASC,KAAtB;;AACA,UAAGJ,MAAM,KAAG,GAAZ,EACA;AAEEC,QAAAA,MAAM,CAACC,KAAP,CAAa,iBAAb;AACD;;AACD,UAAGF,MAAM,KAAG,GAAZ,EACA;AACEC,QAAAA,MAAM,CAACC,KAAP,CAAa,wBAAb;AACD;AAGJ,KAlBE,CAkBD,OAAOE,KAAP,EAAc;AAEZH,MAAAA,MAAM,CAACC,KAAP,CAAa,OAAb;AACH;AAEE,GA9BH;;AAgCA,sBAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACCd,SAAS,CAACiB,GAAV,CAAeC,QAAD,IAAc;AACjB,4BACV;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,oBAAgCA,QAAQ,CAACC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADU;AAGX,OAJA;AADD;AAAA;AAAA;AAAA;AAAA,YADA,eASA;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,uBAFd;AAGE,QAAA,SAAS,EAAC,yBAHZ;AAIE,QAAA,QAAQ,EAAGhB,CAAD,IAAOiB,WAAW,CAACjB,CAAC,CAACkB,MAAF,CAASC,KAAV,CAJ9B;AAKE,QAAA,KAAK,EAAEtB;AALT;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,QAAQ,EAAEuB,WAAW,KAAK,IAAhB,GAAuB,KAAvB,GAA+B,IAD3C;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAGE,QAAA,OAAO,EAAErB,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YATA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA+BD;;GAnEQJ,I;;KAAAA,I;AAqET,eAAeA,IAAf;AACA,MAAM0B,OAAO,GAAG5B,MAAM,CAAC6B,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA","sourcesContent":["/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/button-has-type */\r\nimport React,{useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport './QuestionBox.css';\r\n\r\nimport axios from 'axios';\r\nfunction Post(props) {\r\n\r\n  const [questions,setQuestions]=useState([]);\r\n\r\n  const postquestion=async (e) =>{\r\n      e.preventDefault();\r\n\r\n     const form_data=new FormData();\r\n     \r\n     form_data.append('question',questions);\r\n     const url='http://localhost:5000/api/askquestion'\r\n     try {\r\n      \r\n      const res=await axios.post(url,form_data,{\r\n          withCredentials:true,\r\n      });\r\n      const status=res;\r\n      window.alert(res.data.error);\r\n      if(status===200)\r\n      {\r\n       \r\n        window.alert(\"Question Asked \");\r\n      }\r\n      if(status===200)\r\n      {\r\n        window.alert(\"Question Asked Alredy \");\r\n      }\r\n      \r\n      \r\n  } catch (error) {\r\n    \r\n      window.alert(\"Error\");\r\n  }\r\n\r\n    }\r\n \r\n  return  (\r\n\r\n    <div className=\"QuestionBox\">\r\n    <div className=\"QuestionBox__user\">\r\n    {questions.map((question) => {\r\n                return (\r\n      <h4 className=\"user__username\">{question.owner}</h4>\r\n                )\r\n    }\r\n    )}\r\n    </div>\r\n    <div className=\"QuestionBox__inputField\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"What is your question\"\r\n        className=\"QuestionBox__inputField\"\r\n        onChange={(e) => setQuestion(e.target.value)}\r\n        value={questions}\r\n      />\r\n      <button\r\n        disabled={auth_status === true ? false : true}\r\n        className=\"QuestionBox__btn\"\r\n        onClick={postquestion}\r\n      >\r\n        Ask Question\r\n      </button>\r\n    </div>\r\n    \r\n  \r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\nconst Contain = styled.div`\r\nwidth: 1000px;\r\nheight: 300px;\r\nposition: absolute;\r\n\r\nborder: 1px solid lightgray;\r\nbackground-color: white;\r\nbox-shadow: 2rem 1.4rem 2rem lightgray;\r\ntop: 130%;\r\nleft: 25%;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}